#!/bin/bash
DOCKER_ROOT=$(dirname $(realpath $(dirname ${BASH_SOURCE})))
COMMON_ROOT=$(dirname $(dirname $(realpath ${BASH_SOURCE})))

echo "Running Docker build from $DOCKER_ROOT"
echo "Using common files in $COMMON_ROOT"
echo "DOCKER_TAG=${DOCKER_TAG}"
if [ -n "${DOCKER_TAG}" ]; then
#TODO put this in the dependencies image as well
    if [ -d $DOCKER_ROOT/s2i/bin ]; then
        #S2I image
        rm $DOCKER_ROOT/s2i/bin/determine-branch.sh 2>/dev/null
        rm $DOCKER_ROOT/s2i/bin/determine-driver.sh 2>/dev/null
        rm $DOCKER_ROOT/s2i/bin/init-db-from-deployment.sh 2>/dev/null
        rm $DOCKER_ROOT/s2i/bin/init-db-from-war.sh 2>/dev/null
        rm $DOCKER_ROOT/s2i/bin/init-derby-from-war.sh 2>/dev/null
        rm $DOCKER_ROOT/s2i/bin/prepare-data.sh 2>/dev/null
        rm $DOCKER_ROOT/s2i/bin/translate-jboss-variables.sh 2>/dev/null
#        rm $DOCKER_ROOT/s2i/bin/init-db-from-source.sh 2>/dev/null
#        rm $DOCKER_ROOT/s2i/bin/init-db.sh 2>/dev/null
#        rm $DOCKER_ROOT/s2i/bin/init-data-from-project.sh 2>/dev/null
#        rm $DOCKER_ROOT/s2i/bin/init-data-from-directory.sh 2>/dev/null
        cp -Rf $COMMON_ROOT/s2i/* $DOCKER_ROOT/s2i/bin/
    fi
    docker build --build-arg ENTANDO_VERSION=${DOCKER_TAG} --build-arg ENTANDO_IMAGE_VERSION=${DOCKER_TAG} -f $DOCKERFILE_PATH -t $IMAGE_NAME .
else
    env
    echo "DOCKER_TAG NOT SET!!!!"
    exit 1
fi
